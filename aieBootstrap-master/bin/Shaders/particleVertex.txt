// VERTEX SHADER
#version 410 

layout(location=0) in vec4 Position; 
layout(location=1) in vec4 Colour;
layout(location=2) in vec2 UV;
 
out vec2 uv;
out vec4 colour; 

uniform mat4 projectionViewWorldMatrix;

void main() 
{
	uv = UV;
	colour = Colour; 

	float vertPosterLevel = 30;

	float tempx = Position.x;
	float tempy = Position.y;
	float tempz = Position.z;

	tempx *= vertPosterLevel;
	tempx = int(tempx);
	tempx /= vertPosterLevel;

	tempy *= vertPosterLevel;
	tempy = int(tempy);
	tempy /= vertPosterLevel;

	tempz *= vertPosterLevel;
	tempz = int(tempz);
	tempz /= vertPosterLevel;

	vec4 tempPos = vec4 (tempx,tempy,tempz,1);

	gl_Position = projectionViewWorldMatrix * tempPos;
}
